name: CI
concurrency:
  group: '${{github.workflow}}-${{github.ref}}'
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - dev

jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler: latest
          bundler-cache: true
      - name: Run rubocop
        run: bundle exec rake rubocop

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: ['3.3', '3.4', 'head']
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{matrix.ruby}}
          bundler: latest
          bundler-cache: true
      - name: Run tests
        env:
          TZ: UTC
        run: bundle exec rake test

  user-install:
    strategy:
      fail-fast: false
      matrix:
        plat: ['ubuntu', 'macos']
    runs-on: ${{matrix.plat}}-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler: latest
      - run: test/integration/user_install_test.sh
        shell: bash

  user-upgrade:
    strategy:
      fail-fast: false
      matrix:
        plat: ['ubuntu', 'macos']
    runs-on: ${{matrix.plat}}-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler: latest
      - run: test/integration/user_upgrade_test.sh
        shell: bash

  check-release-version:
    if: github.head_ref == 'dev' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history to compare with previous versions

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(grep -m 1 "VERSION\s*=" lib/**/version.rb | grep -o "[0-9]\+\.[0-9]\+\.[0-9]\+" || echo "0.0.0")
          echo "Current version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Get previous version
        id: previous_version
        run: |
          git checkout HEAD^
          PREVIOUS_VERSION=$(grep -m 1 "VERSION\s*=" lib/**/version.rb | grep -o "[0-9]\+\.[0-9]\+\.[0-9]\+" || echo "0.0.0")
          echo "Previous version: $PREVIOUS_VERSION"
          echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
          git checkout ${{ github.sha }}

      - name: Compare versions
        id: version_check
        run: |
          CURRENT_VERSION="${{ steps.current_version.outputs.current_version }}"
          PREVIOUS_VERSION="${{ steps.previous_version.outputs.previous_version }}"

          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "✅ Version updated from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "old_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
            echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "❌ Version unchanged: $CURRENT_VERSION"
            echo "version_changed=false" >> $GITHUB_OUTPUT
            exit 1
          fi
